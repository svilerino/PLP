Object subclass: #Polinomio	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-Polinomios'!!Polinomio methodsFor: 'as yet unclassified' stamp: 'svilerino 6/7/2016 20:19'!+ aVariable 	^ Suma de:self con:aVariable.! !!Polinomio methodsFor: 'as yet unclassified' stamp: 'svilerino 6/7/2016 20:20'!* aSuma 	^ Producto de: self con: aSuma ! !Polinomio subclass: #Constante	instanceVariableNames: 'val'	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-Polinomios'!!Constante methodsFor: 'evaluating' stamp: 'svilerino 6/7/2016 19:54'!val: aValue	"val setter"	val:=aValue! !!Constante methodsFor: 'evaluating' stamp: 'svilerino 6/7/2016 19:46'!evaluarCon: anInteger 	^ val! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Constante class	instanceVariableNames: ''!!Constante class methodsFor: 'instance-creation' stamp: 'svilerino 6/7/2016 19:52'!conValor: anInteger 	^ (Constante new) val: anInteger! !TestCase subclass: #PolinomiosTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-Polinomios'!!PolinomiosTest methodsFor: 'as yet unclassified' stamp: 'pb 11/10/2014 19:04'!test02AlEvaluarUnaVariableSeObtieneElValorQueSeLeEsteAsignando	| polinomio |		polinomio := Variable new. 		self assert: (polinomio evaluarCon: 3) equals: 3.! !!PolinomiosTest methodsFor: 'as yet unclassified' stamp: 'pb 11/10/2014 19:04'!test01AlEvaluarUnaConstanteSeObtieneElValorDeLaMisma	| polinomio |		polinomio := Constante conValor: 3. 		self assert: (polinomio evaluarCon: 123) equals: 3! !!PolinomiosTest methodsFor: 'as yet unclassified' stamp: 'pb 11/10/2014 19:14'!test05SePuedenCrearPolinomiosSumandoYMultiplicando	| sumando1 sumando2 polinomio |	sumando1 := Constante conValor: 1.	sumando2 := Variable new. 		polinomio := sumando1 + sumando2.		self assert: ((polinomio + polinomio) evaluarCon: 1) equals: 4.	self assert: ((polinomio * polinomio) evaluarCon: 2) equals: 9.! !!PolinomiosTest methodsFor: 'as yet unclassified' stamp: 'pb 11/10/2014 19:06'!test03AlEvaluarUnaSumaSeObtieneElValorDeLaSumaDeLosSumandos	| sumando1 sumando2 polinomio |		sumando1 := Constante conValor: 1.	sumando2 := Variable new. 		polinomio := Suma de: sumando1 con: sumando2.			self assert: (polinomio evaluarCon: 3) equals: 4.! !!PolinomiosTest methodsFor: 'as yet unclassified' stamp: 'pb 11/10/2014 19:06'!test04AlEvaluarUnProductoSeObtieneElValorDeLosPolinomiosEvaluadosMultiplicados	| sumando1 sumando2 polinomio  polinomio2 |		sumando1 := Constante conValor: 1.	sumando2 := Variable new. 		polinomio := Suma de: sumando1 con: sumando2.	polinomio2 := Producto de: polinomio con: polinomio.			self assert: (polinomio2 evaluarCon: 3) equals: 16.! !Polinomio subclass: #Producto	instanceVariableNames: 'factor1 factor2'	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-Polinomios'!!Producto methodsFor: 'as yet unclassified' stamp: 'svilerino 6/7/2016 20:13'!factor1: aSuma factor2: aSuma2 	factor1:=aSuma.	factor2:=aSuma2.	^self.! !!Producto methodsFor: 'as yet unclassified' stamp: 'svilerino 6/7/2016 20:15'!evaluarCon: anInteger 	^ (factor1 evaluarCon: anInteger) * (factor2 evaluarCon: anInteger )! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Producto class	instanceVariableNames: ''!!Producto class methodsFor: 'as yet unclassified' stamp: 'svilerino 6/7/2016 20:12'!de: aSuma con: aSuma2 	^(self new) factor1:aSuma factor2:aSuma2! !Polinomio subclass: #Suma	instanceVariableNames: 'sumando1 sumando2'	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-Polinomios'!!Suma methodsFor: 'as yet unclassified' stamp: 'svilerino 6/7/2016 20:06'!sumando1: aConstante sumando2: aVariable 	sumando1:= aConstante.	sumando2:= aVariable.	^self! !!Suma methodsFor: 'as yet unclassified' stamp: 'svilerino 6/7/2016 20:10'!evaluarCon: anInteger 	^( (sumando1 evaluarCon: anInteger) + (sumando2 evaluarCon: anInteger ))! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Suma class	instanceVariableNames: ''!!Suma class methodsFor: 'as yet unclassified' stamp: 'svilerino 6/7/2016 20:09'!de: sum1 con: sum2	^(self new) sumando1:sum1 sumando2:sum2 ! !!Suma class methodsFor: 'as yet unclassified' stamp: 'svilerino 6/7/2016 20:06'!evaluarCon: anInteger 	self shouldBeImplemented.! !Polinomio subclass: #Variable	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-Polinomios'!!Variable methodsFor: 'as yet unclassified' stamp: 'svilerino 6/7/2016 19:58'!evaluarCon: anInteger 	^ anInteger! !